name: Continuous Integration

on:
  workflow_dispatch:
  pull_request_target:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  # pull_request_target runs with elevated permissions from the base repository
  # We restrict permissions for security when triggered by pull_request_target
  pull-requests: read

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Check if PR is from trusted source
        if: github.event_name == 'pull_request_target'
        run: |
          # Only run for PRs from the same repository or trusted sources
          if [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]; then
            echo "PR is from external repository: ${{ github.event.pull_request.head.repo.full_name }}"
            echo "Skipping CI for security reasons"
            exit 0
          fi
      - name: Checkout
        uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            iac:
              - 'domains/**/*.tf'
              - 'domains/**/secrets.yaml'
              - 'project/**/*.tf'
              - 'project/**/secrets.yaml'
              - 'test-infra/**/*.tf'
              - 'test-infra/**/secrets.yaml'
              - '.github/workflows/continuous-integration.yaml'
              - 'justfile'
              - 'flake.nix'

  iac-format-check:
    name: IaC Format Check
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.iac == 'true' }}
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: nix develop --command just iac-format-check

  iac-validate:
    name: IaC Validate
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.iac == 'true' }}
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: nix develop --command just iac-init
      - run: nix develop --command just iac-validate

  ci-status:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [changes, iac-format-check, iac-validate]
    if: always()
    steps:
      - name: Set CI status to success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "CI passed"
      - name: Set CI status to failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: echo "CI failed"
