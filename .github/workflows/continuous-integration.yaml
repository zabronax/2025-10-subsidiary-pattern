name: Continuous Integration

on:
  workflow_dispatch:
  pull_request_target:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  # pull_request_target runs with elevated permissions from the base repository
  # We restrict permissions for security when triggered by pull_request_target
  pull-requests: read

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Check if PR is from trusted source
        if: github.event_name == 'pull_request_target'
        run: |
          # Only run for PRs from the same repository or trusted sources
          if [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]; then
            echo "PR is from external repository: ${{ github.event.pull_request.head.repo.full_name }}"
            echo "Skipping CI for security reasons"
            exit 0
          fi
      - name: Checkout
        uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            iac:
              - 'domains/**/*.tf'
              - 'domains/**/secrets.yaml'
              - 'project/**/*.tf'
              - 'project/**/secrets.yaml'
              - 'test-infra/**/*.tf'
              - 'test-infra/**/secrets.yaml'
              - '.github/workflows/continuous-integration.yaml'
              - 'justfile'
              - 'flake.nix'

  iac-format-check:
    name: IaC Format Check
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.iac == 'true' }}
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: nix develop --command just iac-format-check

  iac-validate:
    name: IaC Validate
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.iac == 'true' }}
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: nix develop --command just iac-init
      - run: nix develop --command just iac-validate

  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [changes, iac-format-check, iac-validate]
    if: always()
    steps:
      - name: Check CI results
        run: |
          # Check if any IaC changes were detected
          iac_changes="${{ needs.changes.outputs.iac }}"
          format_result="${{ needs.iac-format-check.result }}"
          validate_result="${{ needs.iac-validate.result }}"

          echo "IaC changes detected: ${iac_changes:-'false'}"
          echo "Format check result: ${format_result:-'skipped'}"
          echo "Validate check result: ${validate_result:-'skipped'}"

          # If no IaC changes were detected, consider it a pass
          if [ "${iac_changes}" != "true" ]; then
            echo "✅ No IaC changes detected - CI Summary passes"
            exit 0
          fi

          # If either job failed, fail the summary
          if [ "${format_result}" == "failure" ] || [ "${validate_result}" == "failure" ]; then
            echo "❌ CI checks failed"
            echo "Format check: ${format_result:-'skipped'}"
            echo "Validate check: ${validate_result:-'skipped'}"
            exit 1
          fi

          # If we reach here, all required jobs passed
          echo "✅ All CI checks passed"
          exit 0
